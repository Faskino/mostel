---
import Masonry from "../components/Masonry.astro";
import Layout from "../layouts/Layout.astro";
import Section from "../components/Section.astro";
import { Image } from "astro:assets";

const assets = import.meta.glob(
  "/src/assets/images/*.{jpg,JPG,jpeg,png,PNG,webp}",
  {
    eager: true,
  },
);
const images = Object.values(assets).map((mod: any) => mod.default);
---

<Layout backgroundUrl="image.png">
  <Section height="h-fit pb-20" >
      <Masonry>
        {
          images.map((image, index) => (
            <Image
              src={image}
              alt="Gallery image"
              class="mb-3 md:mb-5 cursor-pointer gallery-image w-full hover:scale-98 transition-all duration-150 ease-in-out"
              data-src={image.src}
            />
          ))
        }
      </Masonry>

      <div
        id="fullscreenOverlay"
        class="fixed left-0 right-0 top-0 z-1001 w-screen h-screen hidden items-center justify-center bg-black/40 backdrop-blur-sm"
      >
        <div>
          <img
            id="fullscreenImage"
            src=""
            alt="Fullscreen"
            class="max-w-full max-h-[70vh] object-contain"
          />
        </div>
        <div class="flex gap-5 rounded-full bg-accent w-fit py-3 px-3 absolute bottom-10">
          <button id="prevBtn" class="text-white z-10 cursor-pointer">
            <svg
              class="w-5 h-5 fill-background"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 320 512"
              ><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
              <path
                d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"
              ></path></svg
            >
          </button>
          <button
            id="closeBtn"
            class="text-background text-lg font-bold cursor-pointer transition-all duration-150"
          >
            Zavrie≈•</button
          >
          <button id="nextBtn" class="text-white z-10 cursor-pointer">
            <svg
              class="w-5 h-5 fill-background"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 320 512"
              ><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
              <path
                d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"
              ></path></svg
            >
          </button>
        </div>
      </div>

      <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
          const overlay = document.getElementById("fullscreenOverlay");
          const fullscreenImg = document.getElementById("fullscreenImage");
          const closeBtn = document.getElementById("closeBtn");
          const prevBtn = document.getElementById("prevBtn");
          const nextBtn = document.getElementById("nextBtn");
          const imageEls = Array.from(
            document.querySelectorAll(".gallery-image"),
          );

          let currentIndex = 0;

          function showImage(index) {
            if (index < 0) index = imageEls.length - 1;
            if (index >= imageEls.length) index = 0;
            currentIndex = index;
            const src = imageEls[currentIndex].getAttribute("data-src");
            fullscreenImg.src = src;
          }

          imageEls.forEach((img, index) => {
            img.addEventListener("click", () => {
              currentIndex = index;
              showImage(currentIndex);
              overlay.classList.remove("hidden");
              overlay.classList.add("flex");
            });
          });

          closeBtn.addEventListener("click", () => {
            overlay.classList.add("hidden");
            overlay.classList.remove("flex");
          });

          overlay.addEventListener("click", (e) => {
            if (e.target === overlay) {
              overlay.classList.add("hidden");
              overlay.classList.remove("flex");
            }
          });

          prevBtn.addEventListener("click", (e) => {
            e.stopPropagation();
            showImage(currentIndex - 1);
          });

          nextBtn.addEventListener("click", (e) => {
            e.stopPropagation();
            showImage(currentIndex + 1);
          });

          document.addEventListener("keydown", (e) => {
            if (overlay.classList.contains("hidden")) return;

            if (e.key === "ArrowLeft") {
              showImage(currentIndex - 1);
            } else if (e.key === "ArrowRight") {
              showImage(currentIndex + 1);
            } else if (e.key === "Escape") {
              overlay.classList.add("hidden");
              overlay.classList.remove("flex");
            }
          });
        });
      </script>
  </Section>
</Layout>
