---
import Masonry from "../components/Masonry.astro";
import Layout from "../layouts/Layout.astro";
import Section from "../components/Section.astro";
import { Image } from "astro:assets";

const assets = import.meta.glob(
  "/src/assets/images/*.{jpg,JPG,jpeg,png,PNG,webp}",
  {
    eager: true,
  },
);
const images = Object.values(assets).map((mod: any) => mod.default);
---

<Layout>
  <Section height="h-fit">
    <div>
      <Masonry>
        {
          images.map((image, index) => (
            <Image
              src={image}
              alt="Gallery image"
              class="mb-5 cursor-pointer gallery-image w-full"
              data-src={image.src}
            />
          ))
        }
      </Masonry>

      <div
        id="fullscreenOverlay"
        class="fixed left-0 right-0 top-0 z-1001 w-screen h-screen hidden items-center justify-center bg-black/40 backdrop-blur-sm"
      >
        <button
          id="prevBtn"
          class="absolute left-10 top-1/2 text-white z-10 cursor-pointer"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 512 512"
            class="h-15 w-15 fill-accent transition-all duration-150 hover:fill-secondary"
            ><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
            <path
              d="M512 256A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM271 135c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-87 87 87 87c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0L167 273c-9.4-9.4-9.4-24.6 0-33.9L271 135z"
            ></path></svg
          >
        </button>
        <div class="relative">
          <img
            id="fullscreenImage"
            src=""
            alt="Fullscreen"
            class="max-w-full max-h-[70vh] object-contain"
          />
          <button
            id="closeBtn"
            class="absolute bottom-5 left-1/2 transform -translate-x-1/2 text-background bg-accent/80 hover:bg-secondary px-5 py-3 rounded-full text-xl font-bold cursor-pointer transition-all duration-150"
          >
            Zavrie≈•</button
          >
        </div>

        <button
          id="nextBtn"
          class="absolute right-10 top-1/2 text-white z-10 cursor-pointer"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-15 h-15 fill-accent transition-all duration-150 hover:fill-secondary"
            viewBox="0 0 512 512"
            ><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
            <path
              d="M0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM241 377c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l87-87-87-87c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L345 239c9.4 9.4 9.4 24.6 0 33.9L241 377z"
            ></path></svg
          >
        </button>
      </div>

      <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
          const overlay = document.getElementById("fullscreenOverlay");
          const fullscreenImg = document.getElementById("fullscreenImage");
          const closeBtn = document.getElementById("closeBtn");
          const prevBtn = document.getElementById("prevBtn");
          const nextBtn = document.getElementById("nextBtn");
          const imageEls = Array.from(
            document.querySelectorAll(".gallery-image"),
          );

          let currentIndex = 0;

          function showImage(index) {
            if (index < 0) index = imageEls.length - 1;
            if (index >= imageEls.length) index = 0;
            currentIndex = index;
            const src = imageEls[currentIndex].getAttribute("data-src");
            fullscreenImg.src = src;
          }

          imageEls.forEach((img, index) => {
            img.addEventListener("click", () => {
              currentIndex = index;
              showImage(currentIndex);
              overlay.classList.remove("hidden");
              overlay.classList.add("flex");
            });
          });

          closeBtn.addEventListener("click", () => {
            overlay.classList.add("hidden");
            overlay.classList.remove("flex");
          });

          overlay.addEventListener("click", (e) => {
            if (e.target === overlay) {
              overlay.classList.add("hidden");
              overlay.classList.remove("flex");
            }
          });

          prevBtn.addEventListener("click", (e) => {
            e.stopPropagation();
            showImage(currentIndex - 1);
          });

          nextBtn.addEventListener("click", (e) => {
            e.stopPropagation();
            showImage(currentIndex + 1);
          });

          document.addEventListener("keydown", (e) => {
            if (overlay.classList.contains("hidden")) return;

            if (e.key === "ArrowLeft") {
              showImage(currentIndex - 1);
            } else if (e.key === "ArrowRight") {
              showImage(currentIndex + 1);
            } else if (e.key === "Escape") {
              overlay.classList.add("hidden");
              overlay.classList.remove("flex");
            }
          });
        });
      </script>
    </div>
  </Section>
</Layout>
